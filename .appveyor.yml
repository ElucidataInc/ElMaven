version: 1.0.{build}
environment:
  COMPILER: msys2
  PLATFORM: x64
  MSYS2_ARCH: x86_64
  MSYS2_DIR: msys64
  MSYSTEM: MINGW64
  BIT: 64



install:
    - SET "PATH=C:\%MSYS2_DIR%\%MSYSTEM%\bin;C:\%MSYS2_DIR%\usr\bin;%PATH%"

    - bash -lc "pacman -S --needed --noconfirm mingw-w64-x86_64-qt-creator"

    - bash -lc "pacman -S --needed --noconfirm mingw64/mingw-w64-x86_64-hdf5 mingw64/mingw-w64-x86_64-netcdf mingw64/mingw-w64-x86_64-boost"

    - bash -lc "pacman -S --needed --noconfirm zlib-devel"

    - bash -lc "pacman -S --noconfirm mingw64/mingw-w64-x86_64-curl"

    - bash -lc "wget https://github.com/linux-test-project/lcov/releases/download/v1.12/lcov-1.12.tar.gz"
    - bash -lc "tar -xzf lcov-1.12.tar.gz"
    - bash -lc "ln -s $PWD/lcov-1.12/bin/lcov /c/msys64/mingw64/bin/lcov"
    - bash -lc "ln -s $PWD/lcov-1.12/bin/geninfo /c/msys64/mingw64/bin/geninfo"

build_script:
    - bash -lc "cd C:/projects/ElMaven/ ; echo no | ./run.sh"
    - bash -lc "ls -lR C:/Projects/"
    - bash -lc "lcov -b src/core/libmaven/ --capture --directory C:/projects/build/tmp/maven/ --output-file lcov.info --no-external"
    - bash -lc "lcov --summary lcov.info"

on_success:
    - bash -lc "export CODECOV_TOKEN="9a0f9704-6d63-48c6-8c1a-ded361a26597"
    - bash -lc "bash <(curl -s https://codecov.io/bash)"

#before_build:
  #- git submodule update --init --recursive

  ## Install 64-bit QT
  #- bash -lc "pacman -S --needed --noconfirm mingw-w64-x86_64-qt-creator"

  #- bash -lc "pacman -S --needed --noconfirm mingw64/mingw-w64-x86_64-hdf5 mingw64/mingw-w64-x86_64-netcdf mingw64/mingw-w64-x86_64-boost"

  ## Install zlib
  #- bash -lc "pacman -S --needed --noconfirm zlib-devel"

  #- bash -lc "cd C:/projects/ElMaven/ ; echo yes | ./run.sh"

  ## - IF ($LASTEXITCODE -ne 0) {$host.SetShouldExit($LASTEXITCODE)}

##build_script:
  ##- bash -lc "cd C:/projects/ElMaven/ ; ./run_tests.sh"

  ## Get submodules


  ## Install sqlite3
  ## - bash -lc "pacman -S --needed --noconfirm mingw64/mingw-w64-x86_64-sqlite3"

  ## - bash -lc "cd C:/projects/ElMaven/bin ; ls"

  ## - cd bin
  ## - dir

#artifacts:
#- path: bin/El_Maven_*





# image: Visual Studio 2013
# configura tion: Debug

# install:
#   - set QTDIR=C:\Qt\5.5\mingw492_32
#   - set PATH=%PATH%;%QTDIR%\bin;C:\MinGW\bin


# before_build:
#   - set PATH=C:\msys2\bin;%QT5%\bin;%PATH%

# install:
#   - C:\msys64\usr\bin\bash --login -c "pacman -S --noconfirm mingw-w64-x86_64-qt-creator"
#   - C:\msys64\usr\bin\bash --login -c "pacman -S --noconfirm mingw64/mingw-w64-x86_64-hdf5 mingw64/mingw-w64-x86_64-netcdf mingw64/mingw-w64-x86_64-boost"

  #   C:\msys64\usr\bin\bash --login -c "pacman -S --verbose --needed --noconfirm base-devel";
    # cd afsdfdsfdf  -ErrorAction Ignore


# environment:
#   -compiler: msys2
  # - QT:
  #   MINGW:

# build:
#   project: add.cpp

# before_build:
#   cmd:
    # cd C:\msys64\mingw64\bin\;
    # ls;
    # C:\msys64\usr\bin\bash --login -c "";
  # cmd:
  #   ;


# build_script:
#   - set PATH=%PATH%;C:\msys64\mingw64\bin\;C:\MinGW\bin
#   # - dir
#   # - cd test\
#   - C:\msys64\usr\bin\bash --login -c "cd C:/projects/ElMaven/ && echo yes | ./run.sh"

#   - cd bin\
#   - dir

  # - C:\msys64\usr\bin\bash --login -c "cd C:/projects/test-appveyor/test/ && mingw32-make"
  # - dir
  # - make

  # - test\make
  # cmd:
  #   set PATH=C:\msys64\mingw64\bin\;
  #   qmake test\test.pro;
  # - qmake test\test.pro
  # - test\make

# deploy:
# - provider: GitHub
#   auth_token:
#     secure: hQDQ9bqFo+fkhKBZtywbP7ZpnLzCxpIiMIgbWLYvcMSmdJ1BvIWFQU0HtNK9rikt
#   artifact: test
